version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taxease-postgres
    environment:
      POSTGRES_DB: taxease_kenya
      POSTGRES_USER: taxease_user
      POSTGRES_PASSWORD: taxease_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - taxease-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: taxease-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - taxease-network

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taxease-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taxease_kenya
      - DB_USER=taxease_user
      - DB_PASSWORD=taxease_password
      - REDIS_URL=redis:6379
      - JWT_SECRET=your-jwt-secret-key
      - PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - taxease-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taxease-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - taxease-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: taxease-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - taxease-network

volumes:
  postgres_data:
  redis_data:

networks:
  taxease-network:
    driver: bridge
